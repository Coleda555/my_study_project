"""
Бабкагеддон
Ховард и Винс убегают от демона злой бабушки, которого они случайно призвали. Ритуал произошел на нулевых линейных
координатах, и перед тем как бабушка погналась за ними, Ховард отбежал на координату nn, а Винс на координату mm, после
чего они продолжили убегать от нулевой координаты с одинаковой скоростью, а бабушка начала свое движение в два раза
быстрее них.



Напишите программу, которая находит минимальное расстояние, которое нужно пробежать бабушке, чтобы настигнуть Ховарда и
 Винса.

Формат входных данных
На вход программе подается два целых ненулевых числа nn и mm, разделенные символом пробела, — координаты Ховарда и
 Винса, на которые они успели отбежать перед тем, как бабушка начала свое движение.

Формат выходных данных
Программа должна вывести одно число — наименьшее расстояние, которое должна пробежать бабушка, чтобы настигнуть их.

Примечание 1. Рассмотрим первый тест. Сначала бабушка добежит до Ховарда, поскольку бабушка бегает в два раза быстрее
него, то она с нулевой координаты добежит до координаты 22 ровно в тот момент, как Ховард перебежит с координаты 11 на
координату 22, и пока это происходило, Винс также успел отбежать на одну позицию вперед, значит, теперь между бабушкой
и Винсом расстояние 22, а значит Винс доберется с координаты 44 до координаты 66 за то же время, что и бабушка добежит
с координаты 22 до координаты 66.

Примечание 2. Рассмотрим второй тест. Поскольку Ховард и Винс находятся на одинаковом расстоянии от бабушки, нет разницы
 за кем первым погнаться. Допустим, бабушка будет бежать за Ховардом. Он стоит на координате -1−1, а значит, исходя из
 предыдущего примера, она поймает его на координате -2−2, следовательно, она уже пробежала расстояние 22 и пока она
 бежала за ним, Винс успел отбежать на координату 22, и бабушка настигнет его на координате 66, поскольку Винсу нужно
 пробежать 44 до этой координаты, а бабушке 88, следовательно, в итоге бабушка пробежит расстояние 8 + 2 = 108+2=10.

Sample Input 1:

1 3
Sample Output 1:

6
Sample Input 2:

-1 1
Sample Output 2:

10
Sample Input 3:

-3 -6
Sample Output 3:

12
"""
m_n = [int(i) for i in input().split()]
m = m_n[0]
n = m_n[1]
def run (m, n):
    counter = 0
    babkagedon = 0
    while True:
        m += 1
        n += 1
        babkagedon += 2
        counter += 1
        if babkagedon >= m:
            break
    while True:
        if babkagedon >= n:
            break
        n += 1
        babkagedon += 2
        counter += 1
    if babkagedon == n:
        print(counter * 2)
    elif babkagedon > n:
        print(counter * 2 - 1)



def run_minus (m, n):
    counter = 0
    babkagedon = 0
    while True:
        m -= 1
        n += 1
        babkagedon -= 2
        counter += 1
        if babkagedon >= m:
            break
    while True:
        if babkagedon >= n:
            break
        n += 1
        babkagedon += 2
        counter += 1
    if babkagedon == n:
        print(counter * 2)
    elif babkagedon > n:
        print(counter * 2 - 1)


if abs(m) <= abs(n):
    if m >=0 and n >= 0:
        run(m,n)
    elif m < 0 and n < 0:
        run(abs(m), abs(n))
    elif m < 0 and n > 0:
        run_minus(m, n)
    elif m > 0 and n < 0:
        run_minus(n, m)

elif abs(n) <= abs(m):
    if m >=0 and n >= 0:
        run(n,m)
    elif m < 0 and n < 0:
        run(abs(n), abs(m))
    elif m < 0 and n > 0:
        run_minus(m, n)
    elif m > 0 and n < 0:
        run_minus(n, m)
